#!/usr/bin/env bash

source bin/create-envfile
source ./var/actions/services_status

if ( ! areServicesRunning ); then
    echo "Services are not running. Please run bin/up prior to installation.";
    exit 1;
fi

if [ "$1" ]; then
  bin/download "$1"
fi

source ./.env

BASE_URL=${1:-magento2.test}

#echo "Waiting for all the services to be up and running..."
#sleep 5 #Ensure containers are started...
bin/clinotty chmod u+x bin/magento

if hash composer 2>/dev/null; then
    MAGENTO_PUBLIC_KEY="$(composer config -gl | grep '\[http-basic.repo.magento.com.username\]' | cut -c40-)"
    MAGENTO_PRIVATE_KEY="$(composer config -gl | grep '\[http-basic.repo.magento.com.password\]' | cut -c40-)"
fi

if [ -z "$MAGENTO_PUBLIC_KEY" ] || [ -z "$MAGENTO_PRIVATE_KEY" ]; then
    exec < /dev/tty
    echo
    echo
    echo "    Authentication required (repo.magento.com, public_key and private_key):"
    read -p "        Username: " MAGENTO_PUBLIC_KEY
    read -p "        Password: " MAGENTO_PRIVATE_KEY
    echo
    if [ -n "$MAGENTO_PUBLIC_KEY" ] && [ -n "$MAGENTO_PRIVATE_KEY" ] && hash composer 2>/dev/null; then
        read -p "    Add authentication information to host composer config? y/n: " ADD_AUTH
        echo
        if [[ $ADD_AUTH =~ ^[Yy]$ ]]; then
            composer global config http-basic.repo.magento.com $PUBLIC_KEY $PRIVATE_KEY
        fi
        ADD_AUTH=''
    fi
    exec <&-
fi

if [ -n "$PUBLIC_KEY" ] && [ -n "$PRIVATE_KEY" ]; then
    bin/clinotty composer config http-basic.repo.magento.com $PUBLIC_KEY $PRIVATE_KEY
    MAGENTO_PUBLIC_KEY=''
    MAGENTO_PRIVATE_KEY=''
fi

#bin/clinotty composer global require hirak/prestissimo
#bin/clinotty composer update

INSTALL_COMMAND="setup:install \
  --db-host="$MYSQL_HOST" \
  --db-name="$MYSQL_DATABASE" \
  --db-user="$MYSQL_USER" \
  --db-password="$MYSQL_PASSWORD" \
  --base-url=http://$BASE_URL/ \
  --backend-frontname="$ADMIN_URI" \
  --admin-firstname="$ADMIN_FIRSTNAME" \
  --admin-lastname="$ADMIN_LASTNAME" \
  --admin-email="$ADMIN_EMAIL" \
  --admin-user="$ADMIN_USER" \
  --admin-password="$ADMIN_PASSWORD" \
  --language=$LANGUAGE \
  --currency=$CURRENCY \
  --timezone=$TIMEZONE \
  --amqp-host=$RABBITMQ_HOST \
  --amqp-port=$RABBITMQ_PORT \
  --amqp-user=$RABBITMQ_DEFAULT_USER \
  --amqp-password=$RABBITMQ_DEFAULT_PASS \
  --amqp-virtualhost=$RABBITMQ_DEFAULT_VHOST \
  --cache-backend=$CACHE_BACKEND \
  --cache-backend-redis-server=$CACHE_BACKEND_REDIS_SERVER \
  --cache-backend-redis-db=$CACHE_BACKEND_REDIS_DB \
  --page-cache=$PAGE_CACHE \
  --page-cache-redis-server=$PAGE_CACHE_REDIS_SERVER \
  --page-cache-redis-db=$PAGE_CACHE_REDIS_DB \
  --session-save=$SESSION_SAVE \
  --session-save-redis-host=$SESSION_SAVE_REDIS_HOST \
  --session-save-redis-log-level=$SESSION_SAVE_REDIS_LOG_LEVEL \
  --session-save-redis-db=$SESSION_SAVE_REDIS_DB \
  --search-engine="$SEARCH_ENGINE" \
  --elasticsearch-host="$ES_HOST" \
  --use-rewrites=1"

#echo $INSTALL_COMMAND
bin/magento $INSTALL_COMMAND

echo "Turning on developer mode.."
bin/clinotty bin/magento deploy:mode:set developer

bin/clinotty bin/magento indexer:reindex

# echo "Forcing deploy of static content to speed up initial requests..."
# bin/clinotty bin/magento setup:static-content:deploy -f

# echo "Re-indexing with Elasticsearch..."
# bin/clinotty bin/magento indexer:reindex

# echo "Clearing the cache to apply updates..."
# bin/clinotty bin/magento cache:flush
